Can you provide me with a powershell script that I can use to terminate another, already running, powershell script?
AI

I'd be happy to help you write a PowerShell script to terminate another PowerShell script. However, it is important to note that PowerShell does not have an in-built mechanism for killing scripts by their process ID (PID) like other command line tools such as Taskkill or Process Explorer on Windows do. Instead, we can use the WMI (Windows Management Instrumentation) module and Win32_Process class to search for processes based on their name and terminate them. Here's an example script:

# Define the target script name
$targetScriptName = "YourTargetScriptName.ps1"

# Get all currently running PowerShell scripts
$runningPowerShellScripts = Get-WmiObject -Class Win32_Process | Where-Object {$_.Name -match 'powershell\.exe' -and $_.Name -notmatch $targetScriptName}

foreach ($script in $runningPowershellScripts) {
    # Terminate each running PowerShell script except the target one
    try {
        Start-Process "taskkill" -ArgumentList "/im powershell.exe", "-p $($script.ProcessId)" -Verb RunAs -Wait -NoNewWindow
        Write-Host "Terminated process with ID: $($script.ProcessId) named '$($script.Name)'."
    } catch {
        # Handle any potential errors during the termination process
        if ($_.Exception.GetType().FullName -eq 'System.ComponentModel.Win32Exception') {
            Write-Host "Failed to terminate process with ID: $($script.ProcessId) named '$($script.Name)' due to error code: 0x$($_._HResult)"
        } else {
            Write-Host "An unexpected error occurred while trying to terminate the script: $_"
        }
    }
}

Replace YourTargetScriptName.ps1 with the name of the PowerShell script you want to keep running, and use this script as a starting point for your own solution. This script will search for all currently running PowerShell scripts (excluding the target one) and attempt to terminate them using the Taskkill command with administrative privileges.
